replicas: 3
port: 27017

replicaSetName: bW9uZ29kYjovL21vbmdvZGItYXBwcy1tb25nb2RiLXJlcGxpY2FzZXQtMC5tb25nb2RiLWFwcHMtbW9uZ29kYi1yZXBsaWNhc2V0LmNvcmUuc3ZjLmNsdXN0ZXIubG9jYWw6MjcwMTcsbW9uZ29kYi1hcHBzLW1vbmdvZGItcmVwbGljYXNldC0xLm1vbmdvZGItYXBwcy1tb25nb2RiLXJlcGxpY2FzZXQuY29yZS5zdmMuY2x1c3Rlci5sb2NhbDoyNzAxNyxtb25nb2RiLWFwcHMtbW9uZ29kYi1yZXBsaWNhc2V0LTIubW9uZ29kYi1hcHBzLW1vbmdvZGItcmVwbGljYXNldC5jb3JlLnN2Yy5jbHVzdGVyLmxvY2FsOjI3MDE3L2RhdGFzZXQ/cmVwbGljYVNldD1tb25nb2RiLWFwcHM=

podDisruptionBudget: {}
# maxUnavailable: 1
# minAvailable: 2

# See https://github.com/helm/charts/tree/master/stable/mongodb-replicaset#authentication
auth:
  enabled: false

extraLabels:
  role: mongodb-apps

# Specs for the MongoDB image
image:
  repository: mongo
  tag: 3.6
  pullPolicy: IfNotPresent

# Annotations to be added to MongoDB pods
podAnnotations: {}

resources:
  requests:
    cpu: 1
    memory: 512M
  limits:
    cpu: 4
    memory: 4G

## Node selector
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: type
              operator: In
              values:
                - mongodb-apps
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: role
              operator: In
              values:
                - mongodb-apps
        topologyKey: "kubernetes.io/hostname"

tolerations:
  - key: "type"
    operator: "Equal"
    value: "mongodb-apps"
    effect: "NoSchedule"

persistentVolume:
  enabled: true
  ## mongodb-replicaset data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: "gp2"
  accessModes:
    - ReadWriteOnce
  size: 50Gi
  annotations: {}

# Annotations to be added to the service
serviceAnnotations: {}

tls:
  # Enable or disable MongoDB TLS support
  enabled: false
  # Please generate your own TLS CA by generating it via:
  # $ openssl genrsa -out ca.key 2048
  # $ openssl req -x509 -new -nodes -key ca.key -days 10000 -out ca.crt -subj "/CN=mydomain.com"
  # After that you can base64 encode it and paste it here:
  # $ cat ca.key | base64 -w0
  # cacert:
  # cakey:

# Entries for the MongoDB config file
configmap:
  storage:
    dbPath: /data/db
  net:
    port: 27017
    # For Mongo 3.6 we also need to bind to outside world
    bindIpAll: true
    # Uncomment for TLS support
    # ssl:
    #   mode: requireSSL
    #   CAFile: /ca/tls.crt
    #   PEMKeyFile: /work-dir/mongo.pem
  replication:
    replSetName: mongodb-apps
